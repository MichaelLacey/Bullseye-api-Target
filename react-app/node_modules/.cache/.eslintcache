[{"/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/index.js":"1","/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/App.js":"2","/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/store/index.js":"3","/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/store/session.js":"4","/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/components/NavBar.js":"5","/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/components/User.js":"6","/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/components/UsersList.js":"7","/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/components/auth/LoginForm.js":"8","/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/components/auth/SignUpForm.js":"9","/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/components/auth/ProtectedRoute.js":"10","/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/store/department.js":"11","/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/store/product.js":"12","/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/store/cart.js":"13","/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/components/HomePage/index.js":"14","/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/components/DepartmentPage/index.js":"15","/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/components/ProductPage/index.js":"16","/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/components/Cart/index.js":"17","/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/components/auth/LogoutButton.js":"18","/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/store/review.js":"19","/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/components/EditReview/index.js":"20","/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/components/CreateReview/index.js":"21"},{"size":381,"mtime":1671660079600,"results":"22","hashOfConfig":"23"},{"size":2251,"mtime":1673113393313,"results":"24","hashOfConfig":"23"},{"size":922,"mtime":1672970474062,"results":"25","hashOfConfig":"23"},{"size":2253,"mtime":1673051498020,"results":"26","hashOfConfig":"23"},{"size":1442,"mtime":1673139397023,"results":"27","hashOfConfig":"23"},{"size":721,"mtime":1671660079600,"results":"28","hashOfConfig":"23"},{"size":685,"mtime":1671660079600,"results":"29","hashOfConfig":"23"},{"size":2045,"mtime":1673135282683,"results":"30","hashOfConfig":"23"},{"size":3199,"mtime":1673135792503,"results":"31","hashOfConfig":"23"},{"size":359,"mtime":1671660079600,"results":"32","hashOfConfig":"23"},{"size":1691,"mtime":1672881249184,"results":"33","hashOfConfig":"23"},{"size":1414,"mtime":1672881249184,"results":"34","hashOfConfig":"23"},{"size":2078,"mtime":1672965570952,"results":"35","hashOfConfig":"23"},{"size":1265,"mtime":1672951609712,"results":"36","hashOfConfig":"23"},{"size":2448,"mtime":1673136953283,"results":"37","hashOfConfig":"23"},{"size":4295,"mtime":1673119287093,"results":"38","hashOfConfig":"23"},{"size":2825,"mtime":1672951203692,"results":"39","hashOfConfig":"23"},{"size":543,"mtime":1673138724393,"results":"40","hashOfConfig":"23"},{"size":3612,"mtime":1673132913233,"results":"41","hashOfConfig":"23"},{"size":3900,"mtime":1673113454203,"results":"42","hashOfConfig":"23"},{"size":3188,"mtime":1673132907413,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1wfkgqg",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"46"},"/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/index.js",[],["90","91"],"/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/App.js",[],"/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/store/index.js",[],"/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/store/session.js",[],"/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/components/NavBar.js",[],"/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/components/User.js",[],"/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/components/UsersList.js",[],"/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/components/auth/LoginForm.js",[],"/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/components/auth/SignUpForm.js",[],"/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/components/auth/ProtectedRoute.js",[],"/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/store/department.js",[],"/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/store/product.js",[],"/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/store/cart.js",[],"/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/components/HomePage/index.js",[],"/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/components/DepartmentPage/index.js",["92"],"/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/components/ProductPage/index.js",["93"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams, useHistory } from 'react-router-dom'\nimport { getProductThunk } from \"../../store/product\";\nimport { getDepartmentThunk } from \"../../store/department\";\nimport './index.css'\nimport { clearProductAction } from \"../../store/department\";\nimport { getUsersCartThunk, addToCartThunk } from \"../../store/cart\";\nimport { getProductReviewsThunk } from \"../../store/review\";\n\nexport default function ProductPage() {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const { productId } = useParams();\n    const { departmentId } = useParams();\n\n\n    const product = Object.values(useSelector(state => state.products))[0];\n    const department = Object.values(useSelector(state => state.departments));\n    // Grab user of the session\n    const sessionUserObject = Object.values(useSelector(state => state.session));\n    const cart = Object.values(useSelector(state => state.cart));\n    const reviews = Object.values(useSelector(state => state.reviews));\n\n    // Get the avg rating for each product by iterating through reviews  \n    // adding the stars up and dividing by the length\n    let sum = 0;\n    reviews.forEach(ele => sum += ele.rating)\n    let avgRating = (sum / reviews.length).toFixed(2)\n    const cartArr = [];\n    cart.forEach(ele => cartArr.push(ele.id));\n\n    useEffect(() => {\n        dispatch(getProductThunk(productId));\n        dispatch(getDepartmentThunk(departmentId));\n        dispatch(getProductReviewsThunk(productId));\n        if (sessionUserObject.user) {\n            dispatch(getUsersCartThunk());\n        }\n        return (() => dispatch(clearProductAction()));\n    }, [dispatch, productId, departmentId]);\n\n    function reviewNav(ele) {\n        history.push(`/edit/review/${ele.id}`, { ele });\n    };\n    function createReview(product) {\n        history.push(`/create/review/${product.id}`, { product });\n    };\n\n    if (!product) return null;\n\n    return (\n        <div className=\"productPageMainDiv\">\n\n            <div className=\"proudctsPageMapped\">\n                <div className=\"departmentAndProductName\">\n                    <h5>Bullsye/{`${department[2]}`}</h5>\n                    <h1>{product.name}</h1>\n                </div>\n\n                <div className=\"productDiv\">\n                    <div className=\"productImages\">\n                        <img className='productImgLeft' src={`${product.image_url2}`} alt='productimg'></img>\n                        <img className='productImgLeft' src={`${product.image_url3}`} alt='productimg'></img>\n                        <img className='productImgLeft' src={`${product.image_url4}`} alt='productimg'></img>\n                    </div>\n\n                    <div className=\"mainImage\">\n                        <img className='productImg' src={`${product.image_url1}`} alt='productimg'></img>\n                    </div>\n\n                    <div className=\"priceAndRightMenu\">\n                        <h2>$ {Number(product.price).toFixed(2)}</h2>\n                        <h3>  {reviews.length > 0 ? `Rating ★ ${avgRating}` : 'Be the first to review'} </h3>\n                        <h3> Free shipping </h3>\n                        <h3> This item isn't sold in stores </h3>\n                        {!cartArr.includes(product.id) && <button className='productAddCartBtn' onClick={() => dispatch(addToCartThunk(product.id))}> Add To Cart</button>}\n                        {cartArr.includes(product.id) && <button className=\"productInCartBtn\">In cart</button>}\n                        <button className='productAddCartBtn' onClick={() => createReview(product)}> Create A Review</button>\n                    </div>\n\n                </div>\n            </div>\n\n            <div className=\"reviewsMainDiv\">\n                {reviews && reviews.map(ele => (\n\n                    <div className=\"review\">\n                        <h4 id=\"names\"> {ele.first_name} {ele.last_name} </h4>\n                        <p id=\"rating\"> ★ {ele.rating} </p>\n                        <p id=\"comment\"> {ele.comment} </p>\n                        <button id=\"edit\" onClick={() => reviewNav(ele)}>Edit / Delete</button>\n                    </div>\n                ))}\n            </div>\n        </div>\n    )\n}","/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/components/Cart/index.js",[],"/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/components/auth/LogoutButton.js",[],"/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/store/review.js",[],"/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/components/EditReview/index.js",["94","95","96","97"],"import './index.css';\nimport { useEffect, useState } from 'react';\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getOneReviewThunk } from '../../store/review';\nimport { getProductThunk } from '../../store/product';\nimport { editReviewThunk } from '../../store/review';\nimport { deleteReviewThunk } from '../../store/review';\n\nexport default function EditReview() {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const { reviewId } = useParams();\n    // Use location from history.push from ProductPage component\n    // like passing props or using react context\n    const location = useLocation()\n    const data = location.state.ele;\n\n    \n    // Grab user of the session\n    let sessionUserId = useSelector(state => state.session.user.id);\n    const review = Object.values(useSelector(state => state.reviews));\n    const product = Object.values(useSelector(state => state.products));\n    let [comment, setComment] = useState('' || data.comment);\n    let [rating, setRating] = useState(1 || data.rating);\n    const [validationErrors, setValidationErrors] = useState([]);\n    const productId = review[2]\n    \n    useEffect(() => {\n        dispatch(getOneReviewThunk(reviewId))\n        dispatch(getProductThunk(productId));\n        setValidationErrors(validationErrors);\n    }, [productId]);\n\n    const deleteReview = (reviewId) => {\n        {if(window.confirm('Are you sure you want to delete this review? This action cannt be undone.')){\n            {dispatch(deleteReviewThunk(reviewId))}}\n            history.push('/')\n        }\n    }\n\n    const handleSubmit = async(e) => {\n        e.preventDefault();\n        const review = {\n            rating,\n            comment,\n\n        };\n        setComment('');\n        setRating(1);\n        let reviewDispatch = dispatch(editReviewThunk(review, parseInt(reviewId)));\n\n        if (reviewDispatch) {\n            history.push(`/`)\n        };\n    };\n    if (!review || !product.length) return null\n    return (\n        <form className='editReviewForm' onSubmit={handleSubmit}>\n            <div className=\"imgDiv\">\n            <img className='editproductImg' src={`${product[0].image_url1}`} alt='productimg'></img>\n            </div>\n            <div className=\"formDiv\">\n            <h className='reviewH2'>Edit your review for : </h>\n            <h5>{product[0].name}</h5>\n            <h5>Write out your review</h5>\n            <ul className='createReviewErrors'>\n                {validationErrors.map((error, idx) => (\n                    <li key={idx}>{error}</li>\n                ))}\n            </ul>\n            <label>\n                <textarea\n                    className='reviewTextArea'\n                    placeholder='Write a review'\n                    type=\"text\"\n                    value={comment}\n                    onChange={(e) => setComment(e.target.value)}\n                    // required\n                />\n            </label>\n            <label>\n                <h5 id='starRating'> How many stars would you rate this product ?</h5>\n                <select\n                    className='starsSelect'\n                    onChange={(e) => setRating(e.target.value)}\n                    value={rating}\n                    required\n                >\n                    <option value={1}>1</option>\n                    <option value={2}>2</option>\n                    <option value={3}>3</option>\n                    <option value={4}>4</option>\n                    <option value={5}>5</option>\n                </select>\n            </label>\n            <button type='submit' className='editReviewButton' disabled={validationErrors.length > 0} > Submit  </button>\n            <button className='deleteReviewButton' onClick={() => deleteReview(reviewId)}> Delete  </button>\n            </div>\n        </form>\n\n    );\n};","/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/components/CreateReview/index.js",["98","99","100"],"import './index.css';\nimport { useEffect, useState } from 'react';\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { getOneReviewThunk } from '../../store/review';\n// import { getProductThunk } from '../../store/product';\nimport { createReviewThunk } from '../../store/review';\n\n\nexport default function CreateReview() {\n    const location = useLocation();\n    const data = location.state.product;\n    const dispatch = useDispatch();\n    const history = useHistory();\n    let sessionUserId = useSelector(state => state.session.user.id);\n    console.log('typeof', typeof sessionUserId, sessionUserId)\n    // const review = Object.values(useSelector(state => state.reviews));\n    const product = Object.values(useSelector(state => state.products));\n    let [comment, setComment] = useState('' || data.comment);\n    let [rating, setRating] = useState(1 || data.rating);\n    const [validationErrors, setValidationErrors] = useState([]);\n    \n    const handleSubmit = async(e) => {\n        e.preventDefault();\n        \n        const review = {\n            user_id: parseInt(sessionUserId),\n            rating,\n            comment,\n\n        };\n       \n        setComment('');\n        setRating(1);\n       \n        let reviewDispatch = dispatch(createReviewThunk(review, data.id));\n\n        if (reviewDispatch) {\n            history.push(`/departments/${data.department_id}/${data.id}`)\n        };\n    };\n    \n    return (\n        <form className='editReviewForm' onSubmit={handleSubmit}>\n        <div className=\"imgDiv\">\n        <img className='editproductImg' src={`${product[0].image_url1}`} alt='productimg'></img>\n        </div>\n        <div className=\"formDiv\">\n        <h className='reviewH2'> Create your review for : </h>\n        <h5>{product[0].name}</h5>\n        <h5>Write out your review</h5>\n        <ul className='createReviewErrors'>\n            {validationErrors.map((error, idx) => (\n                <li key={idx}>{error}</li>\n                ))}\n        </ul>\n        <label>\n            <textarea\n                className='reviewTextArea'\n                placeholder='Description'\n                type=\"text\"\n                value={comment}\n                onChange={(e) => setComment(e.target.value)}\n                // required\n                />\n        </label>\n        <label>\n            <h5 id='starRating'> How many stars would you rate this product ?</h5>\n            <select\n                className='starsSelect'\n                onChange={(e) => setRating(e.target.value)}\n                value={rating}\n                required\n                >\n                <option value={1}>1</option>\n                <option value={2}>2</option>\n                <option value={3}>3</option>\n                <option value={4}>4</option>\n                <option value={5}>5</option>\n            </select>\n        </label>\n        <button type='submit' className='editReviewButton' disabled={validationErrors.length > 0} > Submit  </button>\n        {/* <button className='deleteReviewButton' onClick={() => deleteReview(reviewId)}> Delete  </button> */}\n        </div>\n    </form>\n\n);\n}",{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":27,"column":8,"nodeType":"107","endLine":27,"endColumn":32,"suggestions":"108"},{"ruleId":"105","severity":1,"message":"106","line":41,"column":8,"nodeType":"107","endLine":41,"endColumn":43,"suggestions":"109"},{"ruleId":"110","severity":1,"message":"111","line":21,"column":9,"nodeType":"112","messageId":"113","endLine":21,"endColumn":22},{"ruleId":"105","severity":1,"message":"114","line":33,"column":8,"nodeType":"107","endLine":33,"endColumn":19,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":36,"column":9,"nodeType":"118","messageId":"119","endLine":39,"endColumn":10},{"ruleId":"116","severity":1,"message":"117","line":37,"column":13,"nodeType":"118","messageId":"119","endLine":37,"endColumn":52},{"ruleId":"110","severity":1,"message":"120","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":19},{"ruleId":"110","severity":1,"message":"121","line":3,"column":10,"nodeType":"112","messageId":"113","endLine":3,"endColumn":19},{"ruleId":"110","severity":1,"message":"122","line":21,"column":30,"nodeType":"112","messageId":"113","endLine":21,"endColumn":49},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'sessionUserObject.user'. Either include it or remove the dependency array.","ArrayExpression",["125"],["126"],"no-unused-vars","'sessionUserId' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'dispatch', 'reviewId', and 'validationErrors'. Either include them or remove the dependency array. You can also do a functional update 'setValidationErrors(v => ...)' if you only need 'validationErrors' in the 'setValidationErrors' call.",["127"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'useEffect' is defined but never used.","'useParams' is defined but never used.","'setValidationErrors' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},"Update the dependencies array to be: [dispatch, departmentId, sessionUserObject.user]",{"range":"134","text":"135"},"Update the dependencies array to be: [dispatch, productId, departmentId, sessionUserObject.user]",{"range":"136","text":"137"},"Update the dependencies array to be: [dispatch, productId, reviewId, validationErrors]",{"range":"138","text":"139"},[1009,1033],"[dispatch, departmentId, sessionUserObject.user]",[1729,1764],"[dispatch, productId, departmentId, sessionUserObject.user]",[1391,1402],"[dispatch, productId, reviewId, validationErrors]"]