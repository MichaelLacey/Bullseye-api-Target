{"ast":null,"code":"var _jsxFileName = \"/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/components/EditReview/index.js\",\n  _s = $RefreshSig$();\nimport './index.css';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditReview() {\n  _s();\n  const [comment, setComment] = useState('');\n  const [rating, setRating] = useState(1);\n  const [validationErrors, setValidationErrors] = useState([]);\n  const dispatch = useDispatch();\n  const {\n    reviewId\n  } = useParams();\n\n  // Grab user of the session\n  // let sessionUserId = useSelector(state => state.session.user.id);\n  const revsArr = Object.values(useSelector(state => state.Reviews));\n  const reviewUserIds = revsArr.map(review => review.userId);\n  let validationBoolean = false;\n  for (let i = 0; i < reviewUserIds.length; i++) {\n    if (parseInt(sessionUserId) === parseInt(reviewUserIds[i])) {\n      validationBoolean = true;\n    }\n    ;\n  }\n  ;\n\n  // useEffect(() => {\n  //     const validationErrors = [];\n  //     if (!review && !validationBoolean) validationErrors.push('Please provide a lengthier review');\n  //     if (validationBoolean) validationErrors.push(\"You can't make two reviews for the same spot!\")\n  //     if (review.length > 1000) validationErrors.push('Please provide a review with less than 1000 characters');\n  //     setValidationErrors(validationErrors);\n  // }, [review, validationBoolean]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const review = {\n      rating,\n      comment\n    };\n    setComment('');\n    setRating(1);\n    let reviewDispatch = await dispatch();\n    if (reviewDispatch) {\n\n      // get reviews again after we create review\n      // await dispatch(getReviewsThunk(spotId));\n      // await dispatch(getSpotByid(spotId));\n    }\n    ;\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"editReviewForm\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"reviewH2\",\n      children: \"Create a review \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"createReviewErrors\",\n      children: validationErrors.map((error, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: error\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"reviewTextArea\",\n        placeholder: \"Write a review\",\n        type: \"text\",\n        value: comment,\n        onChange: e => setComment(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Stars\", /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"starsSelect\",\n        onChange: e => setStars(e.target.value),\n        value: rating,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 1,\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 2,\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 3,\n          children: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 4,\n          children: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 5,\n          children: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"createReviewButton\",\n      disabled: validationErrors.length > 0,\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(EditReview, \"Sfi40F3KndHsL0nIIutRrPRHLFQ=\", false, function () {\n  return [useDispatch, useParams, useSelector];\n});\n_c = EditReview;\n;\nvar _c;\n$RefreshReg$(_c, \"EditReview\");","map":{"version":3,"names":["useEffect","useState","useParams","useDispatch","useSelector","EditReview","comment","setComment","rating","setRating","validationErrors","setValidationErrors","dispatch","reviewId","revsArr","Object","values","state","Reviews","reviewUserIds","map","review","userId","validationBoolean","i","length","parseInt","sessionUserId","handleSubmit","e","preventDefault","reviewDispatch","error","idx","target","value","setStars"],"sources":["/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/components/EditReview/index.js"],"sourcesContent":["import './index.css';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\n\nexport default function EditReview() {\n    const [comment, setComment] = useState('');\n    const [rating, setRating] = useState(1);\n    const [validationErrors, setValidationErrors] = useState([]);\n\n    const dispatch = useDispatch();\n    const { reviewId } = useParams();\n\n    // Grab user of the session\n    // let sessionUserId = useSelector(state => state.session.user.id);\n    const revsArr = Object.values(useSelector(state => state.Reviews));\n\n    const reviewUserIds = revsArr.map(review => review.userId);\n    let validationBoolean = false;\n\n    for (let i = 0; i < reviewUserIds.length; i++) {\n        if (parseInt(sessionUserId) === parseInt(reviewUserIds[i])) {\n            validationBoolean = true\n        };\n    };\n\n    // useEffect(() => {\n    //     const validationErrors = [];\n    //     if (!review && !validationBoolean) validationErrors.push('Please provide a lengthier review');\n    //     if (validationBoolean) validationErrors.push(\"You can't make two reviews for the same spot!\")\n    //     if (review.length > 1000) validationErrors.push('Please provide a review with less than 1000 characters');\n    //     setValidationErrors(validationErrors);\n    // }, [review, validationBoolean]);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const review = {\n            rating,\n            comment\n        };\n        setComment('');\n        setRating(1);\n\n        let reviewDispatch = await dispatch();\n        if (reviewDispatch) {\n        \n            // get reviews again after we create review\n            // await dispatch(getReviewsThunk(spotId));\n            // await dispatch(getSpotByid(spotId));\n        };\n    };\n\n    return (\n        <form className='editReviewForm' onSubmit={handleSubmit}>\n            <h2 className='reviewH2'>Create a review </h2>\n            <ul className='createReviewErrors'>\n                {validationErrors.map((error, idx) => (\n                    <li key={idx}>{error}</li>\n                ))}\n            </ul>\n            <label>\n                <textarea\n                    className='reviewTextArea'\n                    placeholder='Write a review'\n                    type=\"text\"\n                    value={comment}\n                    onChange={(e) => setComment(e.target.value)}\n                    required\n                />\n            </label>\n            <label>\n                Stars\n                <select\n                    className='starsSelect'\n                    onChange={(e) => setStars(e.target.value)}\n                    value={rating}\n                    required\n                >\n                    <option value={1}>1</option>\n                    <option value={2}>2</option>\n                    <option value={3}>3</option>\n                    <option value={4}>4</option>\n                    <option value={5}>5</option>\n                </select>\n            </label>\n            <button type='submit' className='createReviewButton' disabled={validationErrors.length > 0}>Create</button>\n        </form>\n    );\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}