{"ast":null,"code":"const GET_PRODUCT_REVIEWS = 'get/reviews/product';\n\n/* ___________ A C T I O N S   ___________ */\nexport const getReviewsForProduct = reviews => {\n  return {\n    type: GET_PRODUCT_REVIEWS,\n    reviews\n  };\n};\n// export const\n\n/* ___________ T H U N K S   ___________ */\n// Get reviews for a product \nexport const getProductReviewsThunk = productId => async dispatch => {\n  const response = await fetch(`/api/reviews/${productId}`);\n  const reviews = await response.json();\n  dispatch(getReviewsForProduct(reviews));\n};\n\n// Edit a review\nexport const editReviewThunk = review => async dispatch => {\n  const response = await fetch();\n};\n\n/* ___________ R E D U C E R ___________ */\nconst reviewsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let newState = {};\n  switch (action.type) {\n    case GET_PRODUCT_REVIEWS:\n      action.reviews.forEach(ele => newState[ele.id] = ele);\n      return newState;\n    default:\n      return state;\n  }\n  ;\n};\nexport default reviewsReducer;","map":{"version":3,"names":["GET_PRODUCT_REVIEWS","getReviewsForProduct","reviews","type","getProductReviewsThunk","productId","dispatch","response","fetch","json","editReviewThunk","review","reviewsReducer","state","action","newState","forEach","ele","id"],"sources":["/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/store/review.js"],"sourcesContent":["const GET_PRODUCT_REVIEWS = 'get/reviews/product'\n\n\n\n\n/* ___________ A C T I O N S   ___________ */\nexport const getReviewsForProduct = (reviews) => {\n    return {\n        type: GET_PRODUCT_REVIEWS,\n        reviews\n    };\n};\n// export const\n\n\n\n\n/* ___________ T H U N K S   ___________ */\n// Get reviews for a product \nexport const getProductReviewsThunk = (productId) => async(dispatch) => {\n    const response = await fetch(`/api/reviews/${productId}`);\n    const reviews = await response.json();\n    dispatch(getReviewsForProduct(reviews));\n};\n\n// Edit a review\nexport const editReviewThunk = (review) => async(dispatch) => {\n    const response = await fetch()\n}\n\n\n\n/* ___________ R E D U C E R ___________ */\nconst reviewsReducer = ( state = {}, action) => {\n    let newState = {};\n\n    switch (action.type) {\n\n        case GET_PRODUCT_REVIEWS:\n            action.reviews.forEach(ele => newState[ele.id] = ele)\n            return newState\n        \n        \n        default:\n            return state\n\n\n    };\n};\n\nexport default reviewsReducer;"],"mappings":"AAAA,MAAMA,mBAAmB,GAAG,qBAAqB;;AAKjD;AACA,OAAO,MAAMC,oBAAoB,GAAIC,OAAO,IAAK;EAC7C,OAAO;IACHC,IAAI,EAAEH,mBAAmB;IACzBE;EACJ,CAAC;AACL,CAAC;AACD;;AAKA;AACA;AACA,OAAO,MAAME,sBAAsB,GAAIC,SAAS,IAAK,MAAMC,QAAQ,IAAK;EACpE,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,gBAAeH,SAAU,EAAC,CAAC;EACzD,MAAMH,OAAO,GAAG,MAAMK,QAAQ,CAACE,IAAI,EAAE;EACrCH,QAAQ,CAACL,oBAAoB,CAACC,OAAO,CAAC,CAAC;AAC3C,CAAC;;AAED;AACA,OAAO,MAAMQ,eAAe,GAAIC,MAAM,IAAK,MAAML,QAAQ,IAAK;EAC1D,MAAMC,QAAQ,GAAG,MAAMC,KAAK,EAAE;AAClC,CAAC;;AAID;AACA,MAAMI,cAAc,GAAG,YAAyB;EAAA,IAAvBC,KAAK,uEAAG,CAAC,CAAC;EAAA,IAAEC,MAAM;EACvC,IAAIC,QAAQ,GAAG,CAAC,CAAC;EAEjB,QAAQD,MAAM,CAACX,IAAI;IAEf,KAAKH,mBAAmB;MACpBc,MAAM,CAACZ,OAAO,CAACc,OAAO,CAACC,GAAG,IAAIF,QAAQ,CAACE,GAAG,CAACC,EAAE,CAAC,GAAGD,GAAG,CAAC;MACrD,OAAOF,QAAQ;IAGnB;MACI,OAAOF,KAAK;EAAA;EAGnB;AACL,CAAC;AAED,eAAeD,cAAc"},"metadata":{},"sourceType":"module"}