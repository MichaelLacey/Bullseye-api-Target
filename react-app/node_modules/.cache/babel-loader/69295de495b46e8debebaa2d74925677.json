{"ast":null,"code":"const GET_PRODUCT_REVIEWS = 'get/reviews/product';\nconst EDIT_REVIEW = 'edit/review/product';\nconst GET_ONE_REVIEW = 'get/review/idfromurl';\nconst DELETE_REVIEW = 'delete/review';\n\n/* ___________ A C T I O N S   ___________ */\nexport const getReviewsForProduct = reviews => {\n  return {\n    type: GET_PRODUCT_REVIEWS,\n    reviews\n  };\n};\nexport const editReviewAction = review => {\n  return {\n    type: EDIT_REVIEW,\n    review\n  };\n};\nexport const getOneReview = review => {\n  return {\n    type: GET_ONE_REVIEW,\n    review\n  };\n};\nexport const deleteReview = reviewId => {\n  return {\n    type: DELETE_REVIEW,\n    reviewId\n  };\n};\n\n/* ___________ T H U N K S   ___________ */\n// Get reviews for a product \nexport const getProductReviewsThunk = productId => async dispatch => {\n  const response = await fetch(`/api/reviews/${productId}`);\n  const reviews = await response.json();\n  dispatch(getReviewsForProduct(reviews));\n};\n\n// Edit a review\nexport const editReviewThunk = (review, reviewId) => async dispatch => {\n  const {\n    comment,\n    rating\n  } = review;\n  const response = await fetch(`/api/reviews/${reviewId}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      comment,\n      rating\n    })\n  });\n  if (response.ok) {\n    const newReview = await response.json();\n    dispatch(editReviewAction(newReview));\n    return newReview;\n  }\n  ;\n};\n// Delete a review for a product\nexport const deleteReviewThunk = reviewId => async dispatch => {\n  const response = await fetch(`/api/reviews/delete/${reviewId}`, {\n    method: 'DELETE'\n  });\n  if (response.ok) dispatch(deleteReview(reviewId));\n};\n\n// Get one review by url review id\nexport const getOneReviewThunk = reviewId => async dispatch => {\n  const response = await fetch(`/api/reviews/get/${reviewId}`);\n  const review = await response.json();\n  dispatch(getOneReview(review));\n  return review;\n};\n// Create a review\nexport const createReviewThunk = (product, productId) => async dispatch => {\n  const response = await fetch(`/api/reviews/${productId}`, {});\n};\n/* ___________ R E D U C E R ___________ */\nconst reviewsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let newState = {};\n  switch (action.type) {\n    case GET_PRODUCT_REVIEWS:\n      action.reviews.forEach(ele => newState[ele.id] = ele);\n      return newState;\n    case EDIT_REVIEW:\n      newState = {\n        ...state\n      };\n      newState[action.review.id] = action.review;\n      return newState;\n    case GET_ONE_REVIEW:\n      return action.review;\n    case DELETE_REVIEW:\n      newState = {\n        ...state\n      };\n      delete newState[action.reviewId];\n      return newState;\n    default:\n      return state;\n  }\n  ;\n};\nexport default reviewsReducer;","map":{"version":3,"names":["GET_PRODUCT_REVIEWS","EDIT_REVIEW","GET_ONE_REVIEW","DELETE_REVIEW","getReviewsForProduct","reviews","type","editReviewAction","review","getOneReview","deleteReview","reviewId","getProductReviewsThunk","productId","dispatch","response","fetch","json","editReviewThunk","comment","rating","method","headers","body","JSON","stringify","ok","newReview","deleteReviewThunk","getOneReviewThunk","createReviewThunk","product","reviewsReducer","state","action","newState","forEach","ele","id"],"sources":["/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/store/review.js"],"sourcesContent":["const GET_PRODUCT_REVIEWS = 'get/reviews/product'\nconst EDIT_REVIEW = 'edit/review/product'\nconst GET_ONE_REVIEW = 'get/review/idfromurl'\nconst DELETE_REVIEW = 'delete/review'\n\n/* ___________ A C T I O N S   ___________ */\nexport const getReviewsForProduct = (reviews) => {\n    return {\n        type: GET_PRODUCT_REVIEWS,\n        reviews\n    };\n};\n\nexport const editReviewAction = (review) => {\n    return {\n        type: EDIT_REVIEW,\n        review\n    };\n};\n\nexport const getOneReview = (review) => {\n    return {\n        type: GET_ONE_REVIEW,\n        review\n    };\n};\nexport const deleteReview =(reviewId) => {\n    return {\n        type: DELETE_REVIEW,\n        reviewId\n    }\n}\n\n\n/* ___________ T H U N K S   ___________ */\n// Get reviews for a product \nexport const getProductReviewsThunk = (productId) => async(dispatch) => {\n    const response = await fetch(`/api/reviews/${productId}`);\n    const reviews = await response.json();\n    dispatch(getReviewsForProduct(reviews));\n};\n\n// Edit a review\nexport const editReviewThunk = (review, reviewId) => async(dispatch) => {\n    const { comment, rating } = review;\n\n    const response = await fetch(`/api/reviews/${reviewId}`, {\n        method:'PUT',\n        headers: {'Content-Type':'application/json'},\n        body: JSON.stringify(\n            {comment, \n            rating}\n        )\n        })\n    if (response.ok) {\n        const newReview = await response.json();\n        \n        dispatch(editReviewAction(newReview));\n        return newReview\n    };\n};\n// Delete a review for a product\nexport const deleteReviewThunk = (reviewId) => async(dispatch) => {\n    const response = await fetch(`/api/reviews/delete/${reviewId}`,{method: 'DELETE'});\n    if (response.ok) dispatch(deleteReview(reviewId))\n};\n\n// Get one review by url review id\nexport const getOneReviewThunk = (reviewId) => async(dispatch) => {\n    const response = await fetch(`/api/reviews/get/${reviewId}`);\n    const review = await response.json();\n    dispatch(getOneReview(review));\n    return review;\n};\n// Create a review\nexport const createReviewThunk = (product, productId) => async(dispatch) => {\n    const response = await fetch(`/api/reviews/${productId}`, {\n\n    })\n}\n/* ___________ R E D U C E R ___________ */\nconst reviewsReducer = ( state = {}, action) => {\n    let newState = {};\n\n    switch (action.type) {\n\n        case GET_PRODUCT_REVIEWS:\n            action.reviews.forEach(ele => newState[ele.id] = ele)\n            return newState\n        \n        case EDIT_REVIEW:\n            newState = { ...state }\n            newState[action.review.id] = action.review\n            return newState\n        \n        case GET_ONE_REVIEW:\n            return action.review\n            \n        case DELETE_REVIEW:\n            newState = { ...state }\n            delete newState[action.reviewId]\n            return newState\n\n        default:\n            return state\n\n\n    };\n};\n\nexport default reviewsReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}