{"ast":null,"code":"const GET_DEPARTMENTS = 'get/departments';\n\n/* ___________ A C T I O N S   ___________ */\n\nexport const getDepartments = departments => {\n  return {\n    type: GET_DEPARTMENTS,\n    departments\n  };\n};\nexport const getDepartment = departments => {\n  return {\n    type: GET_DEPARTMENTS,\n    departments\n  };\n};\n\n/* ___________ T H U N K S   ___________ */\n\n// Get all departments\nexport const getDepartmentsThunk = () => async dispatch => {\n  const response = await fetch('/api/departments');\n  const departments = await response.json();\n  dispatch(getDepartments(departments));\n};\n\n// Get one department\nexport const getDepartmentThunk = departmentId => async dispatch => {\n  const response = await fetch(`/api/departments/${departmentId}`);\n  const department = await response.json();\n  dispatch(getDepartment(department));\n};\n\n/* ___________ R E D U C E R ___________ */\nconst departmentsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let newState = {};\n  switch (action.type) {\n    case GET_DEPARTMENTS:\n      action.departments.forEach(ele => newState[ele.id] = ele);\n      return newState;\n    default:\n      return state;\n  }\n  ;\n};\nexport default departmentsReducer;","map":{"version":3,"names":["GET_DEPARTMENTS","getDepartments","departments","type","getDepartment","getDepartmentsThunk","dispatch","response","fetch","json","getDepartmentThunk","departmentId","department","departmentsReducer","state","action","newState","forEach","ele","id"],"sources":["/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/store/department.js"],"sourcesContent":["\nconst GET_DEPARTMENTS = 'get/departments'\n\n/* ___________ A C T I O N S   ___________ */\n\nexport const getDepartments = (departments) => {\n    return {\n        type: GET_DEPARTMENTS,\n        departments\n    };\n};\n\nexport const getDepartment = (departments) => {\n    return {\n        type: GET_DEPARTMENTS,\n        departments\n    };\n};\n\n\n\n/* ___________ T H U N K S   ___________ */\n\n// Get all departments\nexport const getDepartmentsThunk = () => async (dispatch) => {\n    const response = await fetch('/api/departments');\n    const departments = await response.json();\n    dispatch(getDepartments(departments));\n};\n\n// Get one department\nexport const getDepartmentThunk = (departmentId) => async(dispatch) => {\n    const response = await fetch(`/api/departments/${departmentId}`);\n    const department = await response.json();\n    dispatch(getDepartment(department));\n};\n\n/* ___________ R E D U C E R ___________ */\nconst departmentsReducer = (state = {}, action) => {\n    let newState = {};\n    switch (action.type) {\n        case GET_DEPARTMENTS:\n            action.departments.forEach(ele => newState[ele.id] = ele)\n            return newState\n\n\n        default:\n            return state;\n    };\n};\n\nexport default departmentsReducer;"],"mappings":"AACA,MAAMA,eAAe,GAAG,iBAAiB;;AAEzC;;AAEA,OAAO,MAAMC,cAAc,GAAIC,WAAW,IAAK;EAC3C,OAAO;IACHC,IAAI,EAAEH,eAAe;IACrBE;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAME,aAAa,GAAIF,WAAW,IAAK;EAC1C,OAAO;IACHC,IAAI,EAAEH,eAAe;IACrBE;EACJ,CAAC;AACL,CAAC;;AAID;;AAEA;AACA,OAAO,MAAMG,mBAAmB,GAAG,MAAM,MAAOC,QAAQ,IAAK;EACzD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAkB,CAAC;EAChD,MAAMN,WAAW,GAAG,MAAMK,QAAQ,CAACE,IAAI,EAAE;EACzCH,QAAQ,CAACL,cAAc,CAACC,WAAW,CAAC,CAAC;AACzC,CAAC;;AAED;AACA,OAAO,MAAMQ,kBAAkB,GAAIC,YAAY,IAAK,MAAML,QAAQ,IAAK;EACnE,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,oBAAmBG,YAAa,EAAC,CAAC;EAChE,MAAMC,UAAU,GAAG,MAAML,QAAQ,CAACE,IAAI,EAAE;EACxCH,QAAQ,CAACF,aAAa,CAACQ,UAAU,CAAC,CAAC;AACvC,CAAC;;AAED;AACA,MAAMC,kBAAkB,GAAG,YAAwB;EAAA,IAAvBC,KAAK,uEAAG,CAAC,CAAC;EAAA,IAAEC,MAAM;EAC1C,IAAIC,QAAQ,GAAG,CAAC,CAAC;EACjB,QAAQD,MAAM,CAACZ,IAAI;IACf,KAAKH,eAAe;MAChBe,MAAM,CAACb,WAAW,CAACe,OAAO,CAACC,GAAG,IAAIF,QAAQ,CAACE,GAAG,CAACC,EAAE,CAAC,GAAGD,GAAG,CAAC;MACzD,OAAOF,QAAQ;IAGnB;MACI,OAAOF,KAAK;EAAC;EACpB;AACL,CAAC;AAED,eAAeD,kBAAkB"},"metadata":{},"sourceType":"module"}