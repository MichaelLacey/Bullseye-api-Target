{"ast":null,"code":"const GET_PRODUCT_REVIEWS = 'get/reviews/product';\nconst EDIT_REVIEW = 'edit/review/product';\nconst GET_ONE_REVIEW = 'get/review/idfromurl';\n\n/* ___________ A C T I O N S   ___________ */\nexport const getReviewsForProduct = reviews => {\n  return {\n    type: GET_PRODUCT_REVIEWS,\n    reviews\n  };\n};\nexport const editReviewAction = review => {\n  return {\n    type: EDIT_REVIEW,\n    review\n  };\n};\nexport const getOneReview = review => {\n  return {\n    type: GET_ONE_REVIEW,\n    review\n  };\n};\n\n/* ___________ T H U N K S   ___________ */\n// Get reviews for a product \nexport const getProductReviewsThunk = productId => async dispatch => {\n  const response = await fetch(`/api/reviews/${productId}`);\n  const reviews = await response.json();\n  dispatch(getReviewsForProduct(reviews));\n};\n\n// Edit a review\nexport const editReviewThunk = (review, reviewId) => async dispatch => {\n  const {\n    comment,\n    rating\n  } = review;\n  const response = await fetch(`/api/reviews/${reviewId}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      comment,\n      rating\n    })\n  });\n  if (response.ok) {\n    const newReview = await response.json();\n    dispatch(editReviewAction(newReview));\n    return newReview;\n  }\n  ;\n};\nexport const deleteReviewThunk = reviewId => async dispatch => {\n  const response = await fetch(`/api/reviews/delete/${reviewId}`);\n};\n\n// Get one review by url review id\nexport const getOneReviewThunk = reviewId => async dispatch => {\n  const response = await fetch(`/api/reviews/get/${reviewId}`);\n  const review = await response.json();\n  dispatch(getOneReview(review));\n  return review;\n};\n\n/* ___________ R E D U C E R ___________ */\nconst reviewsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let newState = {};\n  switch (action.type) {\n    case GET_PRODUCT_REVIEWS:\n      action.reviews.forEach(ele => newState[ele.id] = ele);\n      return newState;\n    case EDIT_REVIEW:\n      newState = {\n        ...state\n      };\n      newState[action.review.id] = action.review;\n      return newState;\n    case GET_ONE_REVIEW:\n      return action.review;\n    default:\n      return state;\n  }\n  ;\n};\nexport default reviewsReducer;","map":{"version":3,"names":["GET_PRODUCT_REVIEWS","EDIT_REVIEW","GET_ONE_REVIEW","getReviewsForProduct","reviews","type","editReviewAction","review","getOneReview","getProductReviewsThunk","productId","dispatch","response","fetch","json","editReviewThunk","reviewId","comment","rating","method","headers","body","JSON","stringify","ok","newReview","deleteReviewThunk","getOneReviewThunk","reviewsReducer","state","action","newState","forEach","ele","id"],"sources":["/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/store/review.js"],"sourcesContent":["const GET_PRODUCT_REVIEWS = 'get/reviews/product'\nconst EDIT_REVIEW = 'edit/review/product'\nconst GET_ONE_REVIEW = 'get/review/idfromurl'\n\n\n/* ___________ A C T I O N S   ___________ */\nexport const getReviewsForProduct = (reviews) => {\n    return {\n        type: GET_PRODUCT_REVIEWS,\n        reviews\n    };\n};\n\nexport const editReviewAction = (review) => {\n    return {\n        type: EDIT_REVIEW,\n        review\n    };\n};\n\nexport const getOneReview = (review) => {\n    return {\n        type: GET_ONE_REVIEW,\n        review\n    };\n};\n\n\n\n/* ___________ T H U N K S   ___________ */\n// Get reviews for a product \nexport const getProductReviewsThunk = (productId) => async(dispatch) => {\n    const response = await fetch(`/api/reviews/${productId}`);\n    const reviews = await response.json();\n    dispatch(getReviewsForProduct(reviews));\n};\n\n// Edit a review\nexport const editReviewThunk = (review, reviewId) => async(dispatch) => {\n    const { comment, rating } = review;\n\n    const response = await fetch(`/api/reviews/${reviewId}`, {\n        method:'PUT',\n        headers: {'Content-Type':'application/json'},\n        body: JSON.stringify(\n            {comment, \n            rating}\n        )\n        })\n    if (response.ok) {\n        const newReview = await response.json();\n        \n        dispatch(editReviewAction(newReview));\n        return newReview\n    };\n};\n\nexport const deleteReviewThunk = (reviewId) => async(dispatch) => {\n    const response = await fetch(`/api/reviews/delete/${reviewId}`);\n};\n\n// Get one review by url review id\nexport const getOneReviewThunk = (reviewId) => async(dispatch) => {\n    const response = await fetch(`/api/reviews/get/${reviewId}`);\n    const review = await response.json();\n    dispatch(getOneReview(review));\n    return review;\n};\n\n/* ___________ R E D U C E R ___________ */\nconst reviewsReducer = ( state = {}, action) => {\n    let newState = {};\n\n    switch (action.type) {\n\n        case GET_PRODUCT_REVIEWS:\n            action.reviews.forEach(ele => newState[ele.id] = ele)\n            return newState\n        \n        case EDIT_REVIEW:\n            newState = { ...state }\n            newState[action.review.id] = action.review\n            return newState\n        \n        case GET_ONE_REVIEW:\n            return action.review\n            \n        default:\n            return state\n\n\n    };\n};\n\nexport default reviewsReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}