{"ast":null,"code":"const GET_USERS_CART = 'get/cart';\nconst ADD_TO_CART = 'add/cart';\nconst DELETE_TO_CART = 'delete/cart';\nconst CHECKOUT_CART = 'checkout/cart';\n\n/* ___________ A C T I O N S   ___________ */\n// Get cart items\nexport const getCartItems = products => {\n  return {\n    type: GET_USERS_CART,\n    products\n  };\n};\n// Add a product to a cart\nexport const addCartItem = product => {\n  return {\n    type: ADD_TO_CART,\n    product\n  };\n};\n\n// Remove a product to a cart\nexport const deleteCartItem = productId => {\n  return {\n    type: DELETE_TO_CART,\n    productId\n  };\n};\n// Checkout a cart \nexport const checkoutCartAction = () => {\n  return {\n    type: CHECKOUT_CART\n  };\n};\n\n/* ___________ T H U N K S   ___________ */\n\n// Get users products in cart\nexport const getUsersCartThunk = () => async dispatch => {\n  const response = await fetch('/api/cart');\n  const cart = await response.json();\n  dispatch(getCartItems(cart));\n};\n\n// Add a product to a users cart \nexport const addToCartThunk = productId => async dispatch => {\n  const response = await fetch(`/api/cart/add/${productId}`, {\n    method: 'POST'\n  });\n  if (response.ok) {\n    const product = await response.json();\n    dispatch(addCartItem(product[product.length - 1]));\n    return product;\n  }\n  ;\n};\n\n// Remove a product from a users cart\nexport const removeFromCartThunk = productId => async dispatch => {\n  const response = await fetch(`/api/cart/delete/${productId}`, {\n    method: 'DELETE'\n  });\n  if (response.ok) dispatch(deleteCartItem(productId));\n};\n// Checkout the cart\nexport const checkoutCartThunK = () => async dispatch => {\n  const response = await fetch(`/api/cart/checkout`);\n  if (response.ok) dispatch(checkoutCartAction);\n};\n\n/* ___________ R E D U C E R ___________ */\nconst cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let newState = {};\n  switch (action.type) {\n    case GET_USERS_CART:\n      action.products.forEach(ele => newState[ele.id] = ele);\n      return newState;\n    case ADD_TO_CART:\n      newState = {\n        ...state\n      };\n      newState[action.product.id] = action.product;\n      return newState;\n    case DELETE_TO_CART:\n      newState = {\n        ...state\n      };\n      delete newState[action.productId];\n      return newState;\n    case CHECKOUT_CART:\n      newState = {};\n    default:\n      return state;\n  }\n  ;\n};\nexport default cartReducer;","map":{"version":3,"names":["GET_USERS_CART","ADD_TO_CART","DELETE_TO_CART","CHECKOUT_CART","getCartItems","products","type","addCartItem","product","deleteCartItem","productId","checkoutCartAction","getUsersCartThunk","dispatch","response","fetch","cart","json","addToCartThunk","method","ok","length","removeFromCartThunk","checkoutCartThunK","cartReducer","state","action","newState","forEach","ele","id"],"sources":["/home/michaellacey/appacademy/Projects/Bullseye-api-Target/react-app/src/store/cart.js"],"sourcesContent":["const GET_USERS_CART = 'get/cart'\nconst ADD_TO_CART = 'add/cart'\nconst DELETE_TO_CART = 'delete/cart'\nconst CHECKOUT_CART = 'checkout/cart'\n\n\n/* ___________ A C T I O N S   ___________ */\n// Get cart items\nexport const getCartItems = (products) => {\n    return {\n        type: GET_USERS_CART,\n        products\n    };\n};\n// Add a product to a cart\nexport const addCartItem = (product) => {\n    return {\n        type: ADD_TO_CART,\n        product\n    };\n};\n\n// Remove a product to a cart\nexport const deleteCartItem = (productId) => {\n    return {\n        type: DELETE_TO_CART,\n        productId\n    };\n};\n// Checkout a cart \nexport const checkoutCartAction = () => {\n    return {\n        type: CHECKOUT_CART\n    };\n};\n\n\n/* ___________ T H U N K S   ___________ */\n\n// Get users products in cart\nexport const getUsersCartThunk = () => async (dispatch) => {\n    const response = await fetch('/api/cart');\n    const cart = await response.json();\n    dispatch(getCartItems(cart));\n};\n\n// Add a product to a users cart \nexport const addToCartThunk = (productId) => async (dispatch) => {\n    const response = await fetch(`/api/cart/add/${productId}`, { method: 'POST' });\n\n    if (response.ok) {\n        const product = await response.json();\n        dispatch(addCartItem(product[product.length - 1]))\n        return product\n    };\n};\n\n// Remove a product from a users cart\nexport const removeFromCartThunk = (productId) => async (dispatch) => {\n    const response = await fetch(`/api/cart/delete/${productId}`, { method: 'DELETE' });\n\n    if (response.ok) dispatch(deleteCartItem(productId));\n};\n// Checkout the cart\nexport const checkoutCartThunK = () => async (dispatch) => {\n    const response = await fetch(`/api/cart/checkout`);\n    if (response.ok) dispatch(checkoutCartAction)\n};\n\n/* ___________ R E D U C E R ___________ */\nconst cartReducer = (state = {}, action) => {\n    let newState = {};\n    switch (action.type) {\n\n        case GET_USERS_CART:\n            action.products.forEach(ele => newState[ele.id] = ele)\n            return newState\n\n        case ADD_TO_CART:\n            newState = { ...state }\n            newState[action.product.id] = action.product\n            return newState\n\n        case DELETE_TO_CART:\n            newState = { ...state }\n            delete newState[action.productId]\n            return newState\n\n            case CHECKOUT_CART:\n                newState = { }\n        default:\n            return state;\n    };\n};\n\nexport default cartReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}